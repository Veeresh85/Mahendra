pipeline {
    agent any

    environment {
        MAVEN_HOME = '/usr/share/maven'
        JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64'
        TOMCAT_HOME = '/opt/apache-tomcat-10.1.41'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', 
                    credentialsId: 'a54b60a0-9355-42ad-8480-3df0d80408a4', 
                    url: 'https://github.com/Veeresh85/Mahendra.git'
            }
        }

        stage('Build') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn clean package"
            }
        }

       stage('SonarQube Analysis') {
    steps {
        withSonarQubeEnv('Mysonar') {
            sh """
                ${MAVEN_HOME}/bin/mvn sonar:sonar \\
                -Dsonar.projectKey=mahendra-webapp \\
                -Dsonar.projectName='Mahendra Project' \\
                -Dsonar.host.url=http://192.168.152.130:9000 \\
                -Dsonar.login=${SONAR_AUTH_TOKEN}
            """
        }
    }
}
        stage('Test') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn test"
            }
        }

     stage("Execute Ansible"){
            steps{
                ansiblePlaybook credentialsId: 'd9afccef-7d1a-40e3-b22b-99058659ebb4', disableHostKeyChecking: true, installation: 'ansible2', inventory: '/etc/ansible/hosts', playbook: '/home/veeresh/Mahendra/ansible/copy.yml', vaultCredentialsId: '90b0689e-772c-4d89-8e50-097f0c0342a4', vaultTmpPath: ''
            }
           
        }
    }

    post {
        success {
            echo '✅ Deployment successful!'
        }
        failure {
            echo '❌ Build or deployment failed!'
        }
    }
}
