pipeline {
    agent any 
    environment {
        MAVEN_HOME = '/usr/share/maven'
        JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64' // or the path from your java -version output
        PATH = "${MAVEN_HOME}/bin:${JAVA_HOME}/bin:${env.PATH}"
    }
    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'YOUR_GIT_CREDENTIALS_ID', url: 'YOUR_GIT_REPOSITORY_URL'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        stage('Deploy') {
            steps {
                sh 'echo "Deploying to VMware environment..."'
                // Add your deployment steps here.
                // Example: Deploying a WAR file to Tomcat
                // You will need to make sure tomcat is running, and the correct ports are open.
                sh 'scp target/*.war veeresh@localhost:/home/veeresh/apache-tomcat-9.0.99/webapps/'
                // Example: Restart tomcat.
                sshagent (credentials: ['YOUR_SSH_CREDENTIALS_ID']) {
                    sh 'ssh veeresh@localhost "/home/veeresh/apache-tomcat-9.0.99/bin/shutdown.sh"'
                    sh 'ssh veeresh@localhost "/home/veeresh/apache-tomcat-9.0.99/bin/startup.sh"'
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline completed.'
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
