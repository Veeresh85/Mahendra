pipeline {
    agent any

    environment {
        MAVEN_HOME = '/usr/share/maven'
        JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64'
        TOMCAT_HOME = '/opt/apache-tomcat-10.1.41'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', credentialsId: 'a54b60a0-9355-42ad-8480-3df0d80408a4', url: 'https://github.com/Veeresh85/Mahendra.git'
            }
        }

        stage('Build') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn clean package"
            }
        }
        stage('SonarQube Analysis') {
            steps {
                // *** IMPORTANT: REPLACE 'YOUR_SONARQUBE_SERVER_NAME' BELOW ***
                // This must be the EXACT NAME you configured for your SonarQube server in Jenkins
                // (e.g., 'My SonarQube', 'Production SonarQube', etc.)
                withSonarQubeEnv('Mysonar') {
                    // *** IMPORTANT: REPLACE 'YOUR_PROJECT_KEY_HERE' BELOW ***
                    // This is the UNIQUE identifier for your project in SonarQube.
                    // Example: -Dsonar.projectKey=mahendra-app-web
                    sh "${MAVEN_HOME}/bin/mvn org.sonarsource.scanner.maven:sonar-maven-plugin:LATEST:sonar \\
                        -Dsonar.projectKey=mahendra-webapp \\
                        -Dsonar.projectName='Mahendra Project' \\ // You can adjust this display name
                        -Dsonar.host.url=http://192.168.152.130:9000 \\
                        -Dsonar.login=$SONAR_AUTH_TOKEN"
                }
            }
        }
        stage('Test') {
            steps {
                sh "${MAVEN_HOME}/bin/mvn test"
            }
        }

        stage('Deploy to Tomcat') {
            steps {
                // Make sure Tomcat is stopped before deployment
                sh "sudo -S ${TOMCAT_HOME}/bin/shutdown.sh || true"

                // Change ownership if necessary
                sh "sudo -S chown jenkins:jenkins ${TOMCAT_HOME}/webapps/my-jenkins-project.war || true"
                sh "sudo -S chown -R jenkins:jenkins ${TOMCAT_HOME}/webapps/my-jenkins-project || true"

                // Ensure proper permission
                sh "sudo -S chmod 755 ${TOMCAT_HOME}/webapps"

                // Deploy WAR
                sh "cp target/*.war ${TOMCAT_HOME}/webapps/"

                // Start Tomcat
                sh 'echo "veeresh" | sudo -S ${TOMCAT_HOME}/bin/startup.sh'
            }
        }
    }

    post {
        success {
            echo '✅ Deployment successful!'
        }
        failure {
            echo '❌ Build or deployment failed!'
        }
    }
}
